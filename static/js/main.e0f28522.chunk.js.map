{"version":3,"sources":["components/TipCalc.jsx","components/App.jsx","index.js"],"names":["TipCalc","useState","amount","setAmount","tipPercent","setTipPercent","Container","Form","Row","Group","as","Col","md","Label","Control","type","value","onChange","e","target","isClearable","onFocus","select","options","label","opt","console","log","parseFloat","App","ReactDOM","render","document","getElementById"],"mappings":"mNAiDeA,EA7CC,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACbC,EADa,KACLC,EADK,OAEgBF,mBAAS,MAFzB,mBAEbG,EAFa,KAEDC,EAFC,KAIpB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,GAAI,EAAzB,UACE,cAACL,EAAA,EAAKM,MAAN,0BACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,SACLC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAUe,EAAEC,OAAOH,aAGxC,eAACT,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,GAAI,EAAzB,UACE,cAACL,EAAA,EAAKM,MAAN,oBACA,cAAC,IAAD,CACEO,aAAW,EACXC,QAAS,SAAAH,GAAC,OAAIA,EAAEC,OAAOG,UACvBC,QAAS,CACP,CAAEP,MAAO,GAAIQ,MAAO,OACpB,CAAER,MAAO,GAAIQ,MAAO,OACpB,CAAER,MAAO,GAAIQ,MAAO,OACpB,CAAER,MAAO,GAAIQ,MAAO,QAEtBP,SAAU,SAACQ,GACTC,QAAQC,IAAIF,EAAIT,OAChBX,EAAcuB,WAAWH,EAAIT,mBAM3B,IAAXd,GAAgBE,GACf,gDACgBF,GAAUE,EAAa,KADvC,IAC6C,uBAD7C,WAEWwB,WAAW1B,GAAU0B,WAAW1B,GAAUE,EAAa,aC3B3DyB,EAXH,WACV,OACE,8BACE,eAACvB,EAAA,EAAD,WACE,sCACA,cAAC,EAAD,UCJRwB,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e0f28522.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nconst TipCalc = () => {\r\n  const [amount, setAmount] = useState(0);\r\n  const [tipPercent, setTipPercent] = useState(null);\r\n\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <Row>\r\n          <Form.Group as={Col} md={2}>\r\n            <Form.Label>Bill amount</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col} md={3}>\r\n            <Form.Label>Tip %</Form.Label>\r\n            <CreatableSelect\r\n              isClearable\r\n              onFocus={e => e.target.select()}\r\n              options={[\r\n                { value: 15, label: \"15%\" },\r\n                { value: 18, label: \"18%\" },\r\n                { value: 20, label: \"20%\" },\r\n                { value: 22, label: \"22%\" },\r\n              ]}\r\n              onChange={(opt) => {\r\n                console.log(opt.value);\r\n                setTipPercent(parseFloat(opt.value));\r\n              }}\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n      </Form>\r\n      {amount !== 0 && tipPercent && (\r\n        <div>\r\n          Tip amount: ${amount * (tipPercent / 100)} <br />\r\n          Total: ${parseFloat(amount) + parseFloat(amount * (tipPercent / 100))}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TipCalc;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport TipCalc from \"./TipCalc\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Tipr</h1>\r\n        <TipCalc />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}